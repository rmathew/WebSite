m4_define(`m4_post_date', `2006-02-10')m4_dnl
m4_define(`m4_post_title', `QEMU on steroids')m4_dnl
m4_include(`posttrans.m4')m4_dnl
m4_begin_post
<p>
First there was QEMU that provided a fairly fast emulation of x86 hardware using a technique called "dynamic translation". Then came kqemu (or QEMU Accelerator Module) that allowed user code (ring 3) to run directly on the actual hardware providing speedups of around 3-5 times. Now comes the <tt>-kernel-kqemu</tt> option that allows even some of kernel code (ring 0) to run <a href="http://lists.gnu.org/archive/html/qemu-devel/2006-02/msg00110.html">directly</a> on the actual hardware providing <a href="http://lists.gnu.org/archive/html/qemu-devel/2006-02/msg00094.html">impressive speedups</a> over the old kqemu. Of course, these speedups come at the cost of affecting the stability of the host OS because of bugs in kqemu. kqemu is also not Free software, though it is free (gratis) for non-commercial uses.  In other news, GCC's SVN repository is also available for <a href="http://gcc.gnu.org/ml/gcc/2006-02/msg00176.html">read-only access via HTTP</a> for those who are stuck behind corporate firewalls and want access to the latest sources without having to download weekly snapshots. Of course, this is slower than the SVN protocol and might also be pulled off if  it contributes too much to the load on the server. 
<p>
(<a href="http://www.advogato.org/person/rmathew/diary/143.html">Originally posted on Advogato</a>.)
m4_end_post
