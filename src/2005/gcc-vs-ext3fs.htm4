m4_define(`m4_post_date', `2005-02-18')m4_dnl
m4_define(`m4_post_title', `GCC v/s ext3fs')m4_dnl
m4_include(`posttrans.m4')m4_dnl
m4_begin_post
<p>
I build and test the ever bloating mainline GCC at home on a 2GB ext3 partition (that used to contain the <i>whole</i> of my  Linux installation in days gone by). It contains GCC CVS sources, a stripped snapshot of the sources to play with and the GCC build folder. Today the bootstrap of GCC failed complaining that there was no space left on the device for the final <tt>libgcj.so</tt> - a "<tt>df -k</tt>" showed that 93% of the space was being used. A <tt>dumpe2fs</tt> showed me that 5% of the filesystem was reserved for the super-user and the block size was 4K - I moved the data out, reformatted the partition to use 1K blocks and 0% reserved for the super-user and moved the data back in. Now the GCC bootstrap has succeeded and <tt>df -k</tt> still only shows 70% usage. Pick your lesson to learn from this incident.  By the way, the nVidia 6629 drivers installed and worked perfectly with kernel 2.6.10 and X.org server 6.8.2 - the mistake I made the last time was to not have <tt>/usr/include/linux/autoconf.h</tt> when I had copied over the kernel headers after building glibc. This gets built when you do a <tt>make menuconfig</tt> and configure the kernel.
<p>
(<a href="http://www.advogato.org/person/rmathew/diary/59.html">Originally posted on Advogato</a>.)
m4_end_post
