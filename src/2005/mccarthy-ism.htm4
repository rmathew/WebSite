m4_define(`m4_post_date', `2005-08-11')m4_dnl
m4_define(`m4_post_title', `McCarthy-ism')m4_dnl
m4_include(`posttrans.m4')m4_dnl
m4_begin_post
<p>
I have been meaning to check out Lisp (or one of its dialects) for a <i>very long</i> time now. I first came across functional languages (via Standard ML) when we studied Principles of Programming Languages (PoPL) at college. PoPL was also responsible for introducing us to declarative programming (via Prolog). I found these two styles of programming very difficult to grasp as I had been programming with imperative languages (BASIC, Pascal and C) for around 4 years by then. The unfortunate part was that by the time we "got it", the semester was over and we moved on to other things. I told myself at that time that I would learn Lisp and Prolog on my own "soon".  Almost eleven years have passed since then and I still have not come around to actually learning these languages and the programming styles associated with them. Lisp at least keeps appearing on my radar every now and then. The urge to learn it becomes particularly strong when I read about the ravings of the early oldskool hackers in <a href="http://www.amazon.com/exec/obidos/tg/detail/-/0141000511/">Steven Levy's "Hackers"</a> or one of <a href="http://www.paulgraham.com/lisp.html">Paul Graham's articles on Lisp</a> or <a href="http://mitpress.mit.edu/sicp/">SICP</a>. Tromey's recent blog entries have once again aroused my interest in Lisp.   Instead of continuing to procrastinate, I want to start learning Lisp now. I think I would start by reading <a href="http://www.gigamonkeys.com/book/">"Practical Common Lisp"</a>. I also hope to be able to understand the origins of Lisp by reading <a href="http://www-formal.stanford.edu/jmc/recursive.html">John McCarthy's original paper on Lisp</a>. I hope to be able to overcome my revulsion for seeing <i>so many</i> parantheses in even the most trivial of programs. 
<p>
(<a href="http://www.advogato.org/person/rmathew/diary/103.html">Originally posted on Advogato</a>.)
m4_end_post
